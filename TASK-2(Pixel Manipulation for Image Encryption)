from PIL import Image
import numpy as np

def encrypt_image(image_path, key):
    image = Image.open(image_path)
    pixel_array = np.array(image)
    
    # Simple encryption: swap pixel values and add key
    encrypted_pixel_array = (pixel_array + key) % 256
    
    # Save the encrypted image
    encrypted_image = Image.fromarray(encrypted_pixel_array.astype(np.uint8))
    encrypted_image.save("encrypted_image.png")
    print("Image encrypted and saved as encrypted_image.png")

def decrypt_image(encrypted_image_path, key):
    encrypted_image = Image.open(encrypted_image_path)
    encrypted_pixel_array = np.array(encrypted_image)
    
    # Simple decryption: subtract key and correct for underflow
    decrypted_pixel_array = (encrypted_pixel_array - key) % 256
    
    # Save the decrypted image
    decrypted_image = Image.fromarray(decrypted_pixel_array.astype(np.uint8))
    decrypted_image.save("decrypted_image.png")
    print("Image decrypted and saved as decrypted_image.png")

# Example usage:
key = 42  # You can choose any integer as the key
encrypt_image("input_image.png", key)
decrypt_image("encrypted_image.png", key)
